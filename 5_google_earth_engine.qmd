# Google Earth Engine

## Summary {#sec-5-summary}

Google Earth Engine (GEE) is a cloud-based platform designed for geospatial analysis. It combines a vast catalogue of satellite and geospatial data with the computational power of Google enabling large-scale data processing (@google2024). A key feature of GEE is its focus on making analysis accessible to researchers with limited technical expertise, promoting easy sharing of results and ensuring reproducibility (@gorelick2017). GEE provides both a code engine environment and a Python based API that enables automation of processes.

While the full range of benefits is too broad to cover here, key advantages and limitations of GEE are summarized in @fig-gee_adv_lim, alongside some constraints on big-geo data processing.

![Google Earth Engine main advantages and limitatations of big-geo data processing. @amani2020](images/gee_advantages_limitations.png){#fig-gee_adv_lim fig-align="center"}

### Terminology {#sec-5-terminology}

GEE uses some unique terminology and functions that may differ from what users are accustomed to in other remote sensing tools (@tbl-gee-terminology). While this may cause initial confusion, there is comprehensive documentation and user tutorials available to help overcome this. Additionally, due to its popularity, a wealth of user-generated content exists to assist with common queries.

```{r include=FALSE}
library(tidyverse)
library(knitr)
library(here)
library(kableExtra)

#read in data
gee <- readxl::read_excel(here("tables", "gee_terminology.xlsx"))%>% 
  knitr::kable(booktabs = TRUE)%>% 
  kable_styling(position = "center", full_width = T)%>%
    row_spec(.,
  row=0,
  bold = TRUE)
```

```{r echo=FALSE}
#| label: tbl-gee-terminology
#| tbl-cap: "Comparison of Remote Sensing and GEE Terminology"
gee
```

### Server side processing {#sec-5-ssprocessing}

GEE utilises server-side processing to leverage Google's cloud computing power. This reduces hardware limitations and enables scalability, often using parallel processing. However, it also means that users have limited visibility and control over the optimization of processes. While this is generally not an issue for most users, expert researchers who need full control over their computational workflows may find this restrictive.

### Processing Speed {#sec-5-speed}

Specifically looking at time savings that can be made by harnessing the computational power of GEE. @hansen2013 states that it took 100 hours to process \~707 terrabytes of Landsat images for global forest change detection in GEE. Without cloud-based processing it would have taken 1 million hours (@amani2020). This time savings does not even account for the retrieval, preparation, and storage of the images. For many organizations, processing such large datasets would not be feasible without GEE's cloud infrastructure.

## Application {#sec-5-application}

One critique that could be aimed at GEE apps is that they do not always critically analyse the use case they demonstrate. However considering the openness and availability of GEE it cannot be considered as just an academic tool but also an operational one (@kumar2018). It offers a simple and efficient way to quickly build applications that raise awareness of global issues while providing tools for deeper research into local causes.

A key example of a GEE application is Global Forest Change (@fig-forest), which clearly illustrates forest loss worldwide. While the app shows a few case study example locations it does not identify any deeper cause of forest change. However, the associated article (@hansen2013) does provide some possible causes, although it focuses on a subset of locations. Given the global scale and the numerous factors influencing localised forest change, including local policies, this lack of detailed analysis is not surprising.. 

For academics or researchers this provides valuable visualisations and context to highlight specific areas of concerns, guiding further research and analysis. For a non-academic audience it provides an accessible tool to focus resources in critical locations without needing to research and develop the potentially costly tools themselves. This approach has been particularly useful in areas like the Amazon, where Hansen et al.'s work has been instrumental in combating illegal deforestation (@gonzales2019).

::: {#fig-forest fig-width="100%"}
::: iframe
<iframe src="https://glad.earthengine.app/view/global-forest-change#bl=off;old=off;dl=1;lon=20;lat=10;zoom=3;;" width="100%" height="600" style="border: none;">

</iframe>
:::

Global Forest Change Viewer. **Source:** @glad
:::

Clearly GEE is useful for analysis over time but what about where near real-time information is required such as in disaster management. The user is constrained to the revisit time of the data supplied by GEE, such as Landsat \~16 days or Sentinel-2 \~5 days. Whilst it is still key to analyse pre and post-disaster imagery such as available through HazMapper (@scheip2021) - the datasets do not offer real-time data, which can be crucial in effective disaster response. 

In such instances use of commercially available SAR data (to prevent cloud cover issues) with a lower revisit time could be preferred. The issue with this is the response is often proportional to the available resources for that area, so less affluent and lower profile areas may not have resources to provide access this data (@scheip2021). Therefore tools such as HazMapper may be the only way to aid management of the disaster so are priceless in these instances.

## Reflection {#sec-5-reflection}

GEE is undoubtedly an exceptional tool which is a great enabler for remote sensing analysis but also of data visualisation generally with the ease at which apps can be built and published. I'm interested in delving deeper into GEE functionality over the coming weeks and in particularly building applications. In future I'd like to harness the computational power of GEE to identify tree cover and vegetation health in London and the affects this has on air quality. Then to use this as the basis to explore effective measures in improving air quality. This would also help to investigate how useful GEE is "out the box" to deal with issues at a more localised level. In @fig-gee_adv_lim we saw some limitations including only allowing 250gb of user data so if we wanted to use very hi-res commercial satellite data within GEE then this will cause issues especially if wanted to be produce time series analysis, which would be especially useful in the use case mentioned.
